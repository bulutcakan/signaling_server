
######################################################################################################
FROM azul/zulu-openjdk-alpine:11 AS STAGING-JRE-MINI

# At this point JAVA_HOME refers to:
#   adoptopenjdk: /opt/java/openjdk
#   zulu: /usr/lib/jvm/zulu-12

# Build a smaller Java 11 JRE
RUN jlink \
     --module-path ${JAVA_HOME}/jmods \
     --compress=2 \
     --add-modules java.base,java.compiler,java.desktop,java.instrument,java.management.rmi,java.naming,java.prefs,java.scripting,java.security.jgss,java.sql,jdk.httpserver,jdk.unsupported \
     --no-header-files \
     --no-man-pages \
     --strip-debug \
     --output ${JAVA_HOME}/customjre \
    && apk add --no-cache --virtual .build-deps binutils \
    && strip -p --strip-unneeded ${JAVA_HOME}/customjre/lib/server/libjvm.so \
    && apk del --purge .build-deps \
    && rm -rf /tmp/*.apk /tmp/gcc /tmp/gcc-libs.tar.xz /tmp/libz /tmp/libz.tar.xz /var/cache/apk/*
    

######################################################################################################
FROM alpine:3.10.3 AS STAGING-WAR
ARG DEPENDENCIES=docker-workdir

RUN mkdir -p /staging/app/

# Stage dependencies and classes
COPY ${DEPENDENCIES}/js                   /staging/app/js
COPY ${DEPENDENCIES}/META-INF             /staging/app/META-INF
COPY ${DEPENDENCIES}/WEB-INF              /staging/app/WEB-INF
COPY ${DEPENDENCIES}/callTo.html \
     ${DEPENDENCIES}/general-error.jsp \
     ${DEPENDENCIES}/index.html \
     ${DEPENDENCIES}/videochat.html \
     ${DEPENDENCIES}/run-java.sh          /staging/app/

# Assign execution permission to fabric8's run-java.sh script
RUN chmod 755 /staging/app/run-java.sh


######################################################################################################
FROM alpine:3.10.3
ARG JAVA_MAIN_CLASS

# JAVA_HOME needs to be set:
#   adoptopenjdk: /opt/java/openjdk
#   zulu: /usr/lib/jvm/zulu-11  or zulu11-ca

ENV ENV_JAVA_MAIN_CLASS=${JAVA_MAIN_CLASS} \
    JAVA_HOME=/usr/lib/jvm/zulu-11 \
    ENV_JAVA_MODULES_FOR_HAZELCAST="--add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED"

ENV PATH=$PATH:$JAVA_HOME/bin

# Copy JRE mini runtime from previous stage
COPY --from=STAGING-JRE-MINI $JAVA_HOME/customjre $JAVA_HOME

# Copy staged decompressed WAR from previous stage
COPY --from=STAGING-WAR /staging/app  /app

# Entry with exec so jvm flags are correctly gathered
ENTRYPOINT exec java ${ENV_JAVA_MODULES_FOR_HAZELCAST} -cp /app/WEB-INF/classes:/app/WEB-INF/lib/*:/app/WEB-INF/lib-provided/* ${ENV_JAVA_MAIN_CLASS}

# Entry using fabric8's run-java.sh
#ENTRYPOINT JAVA_OPTIONS="${JAVA_OPTS} ${ENV_JAVA_MODULES_FOR_HAZELCAST}" \
#           JAVA_APP_DIR=/app \
#           JAVA_CLASSPATH=/app/WEB-INF/classes:/app/WEB-INF/lib/*:/app/WEB-INF/lib-provided/* \
#           JAVA_MAIN_CLASS=${ENV_JAVA_MAIN_CLASS} \
#           /app/run-java.sh
